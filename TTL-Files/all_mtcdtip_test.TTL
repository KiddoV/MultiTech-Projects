/*
  Author: Viet Ho
*/
show 0
;=====================================;
:INIT
try = 1
mtcdtipType = param2
itemNumber = param3
str2int isRunConfig param4
promImei = 'N/A'
radioType = param5
mtcdtipTemp = 0
radioVersion = 'N/A'
telModuleVer = 'N/A'
fwBuild = 'N/A'
wifiAddr = 'N/A'
bluetoothAddr = 'N/A'
isCSQCheck = -1
logStr = ''

:CHECK_MTCDTIP_TYPE
is266L = -1
is267L = -1
strmatch mtcdtipType '266L'
is266L = result
if is266L=1 goto CHECK_RADIO_TYPE
strmatch mtcdtipType '267L'
is267L = result
if is267L=1 goto CHECK_RADIO_TYPE

:CHECK_RADIO_TYPE
isNONE = -1
isL4E1 = -1
isL4N1 = -1
strlen radioType
if result < 1 then
    isNONE = 1
	goto CONNECTING
else
	isNONE = 0
endif
strmatch radioType 'L4E1'
isL4E1 = result
if isL4E1=1 goto GET_SMC_INFO
strmatch radioType 'L4N1'
isL4N1 = result
if isL4N1=1 goto GET_SMC_INFO

:GET_SMC_INFO
apn1_1 = '1,"IPV4V6","",""'
apn1_2 = '2,"IPV4V6","ims"'
apn1_3 = '3,"IPV4V6","sos"'
if isL4E1=1 then
    radioVersion = '25.20.676'
	telModuleVer = 'LE910C4-EU'
	tempSett = '-273,-33,0,-35,-28,0,-30,94,0,80,99,2,82,105,3'
	rxdivVar = '1,1'
	fwBuild = '#CFVR: 1'
	isCSQCheck = 0
else if isL4N1=1 then
    radioVersion = '25.20.666'
	telModuleVer = 'LE910C4-NF'
	tempSett = '-273,-33,0,-35,-28,0,-30,94,0,80,99,2,82,105,3'
	rxdivVar = '1,1'
	fwBuild = '#CFVR: 2'
	isCSQCheck = 1	 
else
    radioVersion = 'N/A'
	telModuleVer = 'N/A'
	tempSett = 'N/A'
	rxdivVar = 'N/A'
	fwBuild = 'N/A'
	isCSQCheck = 0
endif

;=====================================;
:CONNECTING
timeout = 70 ; connection timeout in seconds
flushrecv
sprintf2 msg 'CONNECTING TO TERATERM...(%d)' try
statusbox msg 'TERATERM CONNECTION'
mpause 1000
connect "192.168.2.1 /ssh /2 /auth=password /user=mtadm /passwd=root /nosecuritywarning"
if result < 2 then
    try=try +1
    if try < 10 goto CONNECTING
    messagebox 'FAILED TO CONNECT TO TERATERM' 'CONNECTION ERROR'
    end
endif
try = 1
testlink
if result > 2 then
    messagebox 'LINK TO TERATERM HAS NOT BEEN MADE' 'CONNECTION ERROR'
	end
endif
closesbox
mpause 1500

:CHECK_FIRMWARE_VERS
call CONDUIT_LOGIN
sendln 'cat /etc/issue.net'
wait 'mLinux 5.1.8'
if result = 0 then
    messagebox 'WRONG FIRMWARE VERSION. EXPECTED: mLinux 5.1.8' 'FIRMWARE FAILURE'
    end
endif

if isRunConfig=1 call CONFIG_STEP

;;;FUNCTIONAL_TEST
:LED_TEST
flushrecv
timeout = 3
statusbox 'CHECKING LED. PLEASE DO A VISUAL CHECK ON LED' 'CHECK LED'
sendln 13
bringupbox
for i 1 2
	mpause 300
	sendln 'mts-io-sysfs store led-a 1'
	waitln "#"
	mpause 300
	sendln 'mts-io-sysfs store led-b 1'
	waitln "#"
	mpause 300
	sendln 'mts-io-sysfs store led-c 1'
	waitln "#"
	mpause 300
	sendln 'mts-io-sysfs store led-d 1'
	waitln "#"
	mpause 300
	sendln 'mts-io-sysfs store led-a 0'
	waitln "#"
	mpause 300
	sendln 'mts-io-sysfs store led-b 0'
	waitln "#"
	mpause 300
	sendln 'mts-io-sysfs store led-c 0'
	waitln "#"
	mpause 300
	sendln 'mts-io-sysfs store led-d 0'
	waitln "#"
next
:turn_all_leds_on
send 13
wait '#'
sendln 'mts-io-sysfs store led-a 1'
wait "#"
mpause 300
sendln 'mts-io-sysfs store led-b 1'
wait "#"
mpause 300
sendln 'mts-io-sysfs store led-c 1'
wait "#"
mpause 300
sendln 'mts-io-sysfs store led-d 1'
statusbox 'LED CHECK PASSED' 'LED PASSED'
mpause 1000

:TEMPERATURE_TEST
timeout = 5
flushrecv
statusbox 'CHECKING TEMPERATURE...' 'CHECK TEMP'
mpause 300
sendln 'cat /sys/class/hwmon/hwmon0/temp1_input'
waitln '5' '4' '3' '2'
if result = 0 then
    closesbox
    messagebox 'COULD NOT GET TEMPERATURE VALUE!' 'TEMPARETURE FAILURE'
    closett
    end
endif
str2int mtcdtipTemp inputstr
if mtcdtipTemp > 39000 then
    closesbox
	messagebox 'TEMP VALUE HIGH LIMIT FAILURE!' 'TEMPARETURE FAILURE'
	closett
	end
endif
sprintf2 msg 'MTCDTIP TEMPARATURE: %d' mtcdtipTemp
statusbox msg 'TEMPERATURE PASSED'
mpause 1000

:DRIVE_TEST
timeout = 5
statusbox 'CHECKING THUMB DRIVE/ SD CARD...' 'THUMB DRIVE/ SD CARD CHECK'
:check_thumb_drive
flushrecv
sendln 'df'
wait '/dev/sda1' '/dev/sdb1'
if result=0 then
  beep
  messagebox 'THUMB DRIVE NOT DETECTED' 'THUMB DRIVE FAILURE'
  disconnect
  closett
  end
endif
:check_sd_card
mpause 300
send 13
sendln 'fdisk -l'
wait 'mmcblk0'
if result = 0 then
    closesbox
    messagebox 'SD CARD NOT DETECTED' 'SD CARD FAILURE'
    closett
    end
endif
:read_write_sd_test
flushrecv
mpause 500
sendln 'ls /media/card'
wait 'bash' '#'
if result = 1 then
    sendln 'rm /media/card/bash'
 	wait "#"
endif
send 13
sendln 'cp /bin/bash /media/card/'
wait '#' 'not'
if result=2 then
    closesbox
    messagebox 'COULD NOT COPY FILE TO SD CARD' 'SD CARD FAILURE'
    closett
    end    
endif
sendln 'ls /media/card'
waitln 'bash'
if result=0 then
    closesbox
    messagebox 'SD CARD READ-WRITE FAILED' 'SD CARD FAILURE'
    closett
    end
endif
mpause 500
sendln "md5sum /bin/bash |awk '{print $1}'"
strconcat cksum1 inputstr
pause 1
sendln "md5sum /media/card/bash |awk '{print $1}'"
strconcat cksum2 inputstr
pause 1
strcompare cksum1 cksum2
if result<>0 then
    closesbox
    messagebox 'SD READ-WRITE TEST FAILURE' 'SD CARD FAILURE'
    closett
    end
endif
mpause 1000
sendln 'rm /media/card/bash'
wait "#"
;statusbox 'SD CARD CHECK PASSED' 'SD CARD PASSED'
;mpause 1000
:read_write_thumbdrive_test
flushrecv
usbdrive=''
pause 1
sendln "df |grep sd |awk '{print $1}'"
waitln '/dev'
strconcat usbdrive inputstr
strremove usbdrive 1 5
mpause 1
sendln 'cp /bin/bash /media/'usbdrive
wait "#"
flushrecv
sendln 'ls /media/'usbdrive'
mpause 500
sendln "md5sum /bin/bash |awk '{print $1}'"
strconcat cksum3 inputstr
wait '#'
sendln "md5sum /media/"usbdrive"/bash |awk '{print $1}'"
strconcat cksum4 inputstr
pause 1
strcompare cksum3 cksum4
if result<>0 then
    messagebox 'THUMB DRIVE READ-WRITE TEST FAILURE' 'THUMB DRIVE FAILURE'
	disconnect
    closett
    end
endif
flushrecv
mpause 500
sendln 'rm /media/'usbdrive'/bash'
statusbox 'THUMB DRIVE AND SD CARD PASSED' 'THUMB/ SD PASSED'
mpause 500
closesbox
mpause 1000

:LORA_TEST
flushrecv
timeout = 5
statusbox 'CHECKING MTAC CARDs...' 'LORA CHECK'
sendln 'mts-io-sysfs show ap1/*'
wait 'MTAC' 'No such file'
if result=1 then
    statusbox 'MTAC1 PASSED' 'LORA AP1 PASSED'
	mpause 400
else
	closesbox
	messagebox 'MTAC LORA PORT AP1 READ FAILURE!' 'LORA AP1 FAILURE'
  	closett
  	end
endif
flushrecv
mpause 1000
sendln 'mts-io-sysfs show ap2/*'
wait 'MTAC' 'No such file'
if result=1 then
	statusbox 'MTAC2 PASSED' 'LORA AP2 PASSED'
	mpause 400
else
	closesbox
	messagebox 'MTAC LORA PORT AP2 READ FAILURE!' 'LORA AP2 FAILURE'
  	closett
  	end
endif
mpause 1000

if isNONE=1 goto SHORTING_MTCDTIP

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
:SIM_TEST
statusbox 'CHECKING SIM CARD...' 'SIM CHECK'
flushrecv
timeout = 5
send 13
wait '#'
sendln 'microcom /dev/modem_at0'
mpause 500
sendln 'at+cpin?'
wait 'OK' 'not found' 'ERROR'
if result > 1 then
    closesbox
    messagebox 'SIM TEST FAILURE!' 'SIM FAILURE'
    closett
    end
endif
send 24
wait '#'
statusbox 'SIM CARD CHECK PASSED' 'SIM PASSED'
mpause 1000

:SMC_TEST
promImei = 'N/A'
timeout = 3
statusbox 'CHECKING SMC...' 'SMC CHECK'
flushrecv
send 13
wait '#'
sendln 'microcom /dev/modem_at0'
mpause 500
sendln 'at'
wait 'OK'
mpause 500
sendln 'ate1'
wait 'OK'
:check_imei
mpause 500
sendln 'at+cgsn'
waitln 'ERROR' '35' '0'
if result = 1 then
    closesbox
    messagebox 'COULD NOT FIND IMEI. PLEASE REPORT!' 'IMEI CHECK FAILURE'
   	closett
   	end
endif
promImei = inputstr
mpause 500
sendln 'at#gpio=1,0,2'
wait 'OK'
mpause 500
sendln 'at#sled=2'
waitln 'OK'
mpause 500
sendln 'at#sledsav'
wait 'OK'
:temp_setting
flushrecv
mpause 500
sendln 'at#tempcfg?'
waitln tempSett
if result = 0 then
    sprintf2 cmd 'at#tempcfg=%s' tempSett
    sendln cmd
    goto temp_setting
endif
:rxdiv_check
flushrecv
mpause 500
sendln 'at#rxdiv?'
wait rxdivVar
if result = 0 then
    sprintf2 cmd 'at#rxdiv=%s' rxdivVar
    sendln cmd
    goto rxdiv_check
endif
:apn1_check
flushrecv
mpause 500
sendln 'at+cgdcont?'
wait apn1_1
if result = 0 then
    sprintf2 cmd 'at+cgdcont=' apn1_1
    sendln cmd
    goto apn1_check
endif
mpause 500
sendln 'at+cgdcont?'
wait apn1_2
if result = 0 then
    sprintf2 cmd 'at+cgdcont=' apn1_2
    sendln cmd
    goto apn1_check
endif
mpause 500
sendln 'at+cgdcont?'
wait apn1_3
if result = 0 then
    sprintf2 cmd 'at+cgdcont=' apn1_3
    sendln cmd
    goto apn1_check
endif
:smc_info_check
flushrecv
mpause 500
sendln 'at+gmm'
wait telModuleVer
if result = 0 then
    closesbox
    sprintf2 msg 'INCORRECT TELIT MODULE. EXPECTED: %s' telModuleVer
	messagebox msg 'MODULE FAILURE'
   	closett
   	end
endif
mpause 500
sendln 'at#swpkgv'
waitln radioVersion
if result = 0 then
    closesbox
    sprintf2 msg 'INCORRECT FIRMWARE VERSION. EXPECTED: %s' radioVersion
	messagebox msg 'FIRMWARE FAILURE'
   	closett
   	end
endif
mpause 500 
sendln 'at#cfvr'
waitln fwBuild
if result=0 then
    closesbox
    sprintf2 msg 'INCORRECT TELIT FIRMWARE BUILD. EXPECTED: %s' fwBuild
	messagebox msg 'FIRMWARE BUILD FAILURE'
   	closett
   	end
endif

if isCSQCheck != 1 goto smc_test_pass

try = 1
timeout = 30
:csq_check
expectedRSSI = 7
mpause 500
sendln 'at+csq'
wait '99'
try = try + 1
if try > 10 goto csq_fail
if result = 1 goto csq_check
mpause 500
sendln 'at+csq'
waitrecv '+CSQ: ' 10 1
strconcat rssi3 inputstr
strremove rssi3 1 6
strremove rssi3 3 2
str2int strvar rssi3
strtrim rssi3 ','
statusbox rssi3 'RSSI'
if strvar >= expectedRSSI then
    mpause 1000
else
	:csq_fail
	closesbox
    messagebox 'LOW RSSI. CSQ SIGNAL STRENGTH FAILURE!' 'CSQ CHECK FAILURE'
    closett
    end
endif

:smc_test_pass
statusbox 'SMC TEST PASSED' 'SMC PASSED'
mpause 500
send 24 ;Exit 'at' command promt
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:SHORTING_MTCDTIP


:GPS_TEST
timeout = 35
flushrecv
statusbox 'CHECKING GPS...' 'GPS CHECK'
mpause 500
sendln 13
sendln '/etc/init.d/gpsd restart'
wait 'Restarting GPS'
wait '#'
sendln 'gpspipe -r'
wait '$GPGGA' '$GPZDA' '$GPRMC' '$GPGSA' '$GNGLL' '$GPGSV' '$GNGSA'
if result = 0 then
    try = try + 1
    if try < 4 then
   	   send 3
	   wait '#'
	   sendln '/etc/init.d/gpsd restart'
	   wait 'pps pps1: source "/dev/ttyXRUSB2" added' '#'
	   send 3
	   wait '#'
	   goto GPS_TEST
	endif
	try = 1
	goto gps_faliure
elseif result > 0 then
	 timeout = 80
	 wait '4505.' '4506.' '4507.' 'could not connect'
	 if result=0 || result=4 then
	  	:gps_faliure
		closesbox
   	 	messagebox 'UNABLE TO GET GPS LOCATION' 'GPS FAILURE'
   		closett
   		end
	 endif
endif
send 3
wait '#'
statusbox 'GPS TEST PASSED' 'GPS PASSED'
mpause 1000

if is267L != 1 goto RESULT_LOGGING

:WIFI_BT_TEST
flushrecv
statusbox 'CHECKING WIFI...' 'WIFI/BLUETOOTH CHECK'
timeout = 15
if isNONE = 1 then
    promImei = 'NO'
endif
wifiAddr = ''
bluetoothAddr = ''
:start_wifi
mpause 500
sendln '/etc/init.d/rs9113 stop >/dev/null 2>&1'
wait '#'
mpause 500
sendln 'export COEX_MODE=5'
wait '#'
mpause 500
sendln 'cd /opt/rs9113;bash /opt/rs9113/wlan_enable.sh >/dev/null 2>&1'
wait '#' 'No such file or directory'
if result=2 goto WIFI_FAILURE
mpause 500
sendln '/opt/rs9113/onebox_util rpine0 create_vap wifi1 sta sw_bmiss'
wait '#' 'No such file or directory'
if result=2 goto WIFI_FAILURE
mpause 500
sendln 'ip link set dev wifi1 up'
wait '#'
:wifi_addr_check
flushrecv
mpause 500
sendln "ifconfig |grep -i wifi1 |awk '{print $5}'"
waitln '00:' '88:' '80:'
strlen inputstr
if result <>17 goto start_wifi
strconcat wifiAddr inputstr
:wifi_scan
timeout=30
mpause 500
sendln 'iw dev wifi1 scan |grep -i SSID'
waitln  'Dummy' 'MTS-MOBILE' 'MTS-PRINTERS' 'MTS-MFG' 'MTS-IT'
if result > 0 then
    statusbox 'WIFI PASSED' 'WIFI PASSED'
elseif result = 0 then
	goto WIFI_FAILURE
endif
mpause 1000
closesbox

:start_bt
flushrecv
statusbox 'CHECKING BLUETOOTH...' 'WIFI/BLUETOOTH CHECK'
send 13
wait '#'
sendln '/etc/init.d/rs9113 restart >/dev/null 2>&1'
wait '#'
sendln 'hciconfig hci0 up'
wait '#'
:bt_addr_check
flushrecv
mpause 500
sendln "hcitool dev |grep -i hci0 |awk '{print $2}'"
waitln '00:' '88:' '80:'
strlen inputstr
if result <>17 goto start_bt
strconcat bluetoothAddr inputstr
timeout=50
:bt_scan
mpause 500
sendln "hcitool scan"
waitln 'Windows CE' 'MUSKYS_blue' 'slave' 'G5' 'WindowsCE' 'OPERATOR-PC' 'ADMIN-PC' 'MTHS' 'TESTROOM'
if result > 0 then
    statusbox 'BLUETOOTH PASS' 'BT PASSED'
elseif result = 0 then
	goto BT_FAILURE
endif
mpause 1000
closesbox
send 13

:write_data_to_file
mpause 500
fileopen fhandle 'C:\temp\wifimacinfo.txt' 1
filewrite fhandle #13#10
sprintf2 dataStr '%s,,%s,,%s' promImei wifiAddr bluetoothAddr
filewrite fhandle dataStr
fileclose fhandle
pause 1

:VERIFY_WIFI_BT_RECORD
mpause 500
messagebox 'VERIFY WIFI AND BLUETOOTH ADDRESS WERE RECORDED CORRECTLY!' 'WIFI/BT MAC ADDRESS VERIFICATION'
exec 'notepad c:\temp\wifimacinfo.txt'


:RESULT_LOGGING
getdate date "%Y/%m/%d"
getdate time "%H:%M:%S"

fileopen fhandle 'C:\DEVICE_TEST_RECORDS\all-mtcdtip-test-records.txt' 1
filewrite fhandle #13#10
sprintf2 logStr '%s,,%s,,%s,,%d,,%s,,%s,,%s,,%s,,%s,,%s' date time itemNumber mtcdtipTemp promImei radioVersion telModuleVer fwBuild wifiAddr bluetoothAddr
filewrite fhandle logStr
fileclose fhandle 

:TEST_DONE
closesbox
statusbox 'MTCDTIP TEST COMPLETE' 'TEST FINISED'
mpause 400
closett
end
;=====================================;
;;;Additional Sub-Labels
:CONDUIT_LOGIN
send 13
wait '#' 'mtcdt login:' 'Password:' '$'
while result != 1
	if result = 2 then
	    sendln 'mtadm'
		wait '#' 'login' 'word' '$'
	elseif result = 3 then
		sendln 'root'
		wait '#' 'login' 'word' '$'
	elseif result = 4 then
		sendln 'sudo -s'
		wait '#' 'login' 'word' '$'
	endif
endwhile
return	;;;;;;

:CONFIG_STEP
statusbox 'RUNNING CONFIGURATION STEP...' 'CONFIGURATION CONDUIT'
config_vendor = 'Multi-Tech Systems'
;sprintf2 config_productId 'MTCDTIP-%s' itemNumber
config_productId = 'MTCDTIP-XXXX-XXXX'
config_deviceId = '12345678'
config_hwVers = 'MTCDTIP-0.0'
config_macAddr = 'AA:08:00:AA:F1:F1'
config_imei = '358942053416591'
config_uuid = '6c7a6a18ccf0a5cbffbd1cc495bc0c43'
send 13
wait '#'
sprintf2 cmd 'mts-id-eeprom --out-file /sys/bus/i2c/devices/0-0056/eeprom --out-format bin --vendor-id "%s" --product-id "%s" --device-id "%s" --hw-version "%s" --mac-addr "%s" --imei "%s" --uuid "%s" ' config_vendor config_productId config_deviceId config_hwVers config_macAddr config_imei config_uuid
if is266L=1 strconcat cmd ' --capa-gps'
if is267L=1 strconcat cmd ' --capa-gps --capa-wifi --capa-bluetooth'
sendln cmd
wait '#'
flushrecv
sendln 'mts-id-eeprom --in-file /sys/bus/i2c/devices/0-0056/eeprom'
timeout = 5
waitregex '^product-id:'
strmatch inputstr '(^product-id:)+.*("(.*?)")'
promProductID = groupmatchstr3
strmatch config_productId promProductID
if result = 0 then
    closesbox
    messagebox 'FAILED TO RUNNING CONFIGURATION. CHECK IF JUMPPER IS INSTALLED' 'CONFIGURATION FAILURE'
	closett
	end
endif
flushrecv
timeout = 20
sendln '/etc/init.d/mts-io restart'
wait 'OK' 'FAIL'
if result=1 then
    statusbox 'SUCCESSFULLY CONFIGURATION MTCDTIP!' 'CONFIGURATION FINISHED'
else
    closesbox
    messagebox 'FAILED TO RUNNING CONFIGURATION. REBOOT DEVICE FAILED!' 'CONFIGURATION FAILURE'
	closett
	end	
endif
wait 'Resetting system modules'
wait '#'
mpause 1000
sendln 13
return ;;;;;;

:WIFI_FAILURE
closesbox
messagebox 'UNABLE TO START WIFI SERVICE!' 'WIFI TEST FAILURE'
closett
end

:BT_FAILURE
closesbox
messagebox 'UNABLE TO GET BLUETOOTH SERVICE!' "BLUETOOTH TEST FAILURE'
closett
end